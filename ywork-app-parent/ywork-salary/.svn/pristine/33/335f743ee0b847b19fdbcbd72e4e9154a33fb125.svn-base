package me.ywork.salary.controller;

import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import com.alibaba.dubbo.common.logger.Logger;
import com.alibaba.dubbo.common.logger.LoggerFactory;
import me.ywork.context.CallContext;
import me.ywork.controller.RestController;
import me.ywork.salary.enumeration.OptPersonType;
import me.ywork.salary.model.SalStaffBaseInfoModel;
import me.ywork.salary.model.SalStaffSalReportDetailModel;
import me.ywork.salary.model.SalUpdateMutiStaffModel;
import me.ywork.salary.service.SalInfoService;
import me.ywork.salary.service.SalReportService;
import me.ywork.salary.service.SalSynService;

/**
 * PC端界面，一些公共的接口
 * 
 */
@Controller
@RequestMapping(value = { "**/app/calsalary/pc" })
public class SalPcController extends RestController<SalInfoService> {
	@Autowired
	private SalReportService salReportService;
	@Autowired
	private SalSynService salSynService;
	private static final Logger logger = LoggerFactory.getLogger(SalAttendanceController.class);
	
	@Override
	protected String getHomePageUrl(String param) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	protected SalInfoService getService() {
		// TODO Auto-generated method stub
		return null;
	}
	

	/**
	 * 获取选中人员该月工资详情(修改浮动款项):传递工资表ID和多个员工ID去返回多个员工的工资数据
	 * 
	 * @param request
	 * @param response
	 */
	@RequestMapping(value = "/getSelectedStaff**", method = RequestMethod.POST)
	public void getSelectedStaffSalaryDetail(HttpServletRequest request, HttpServletResponse response) {
		CallContext callContext = this.getCallContext(request);
		String corpId = callContext.getCorpId();
		try {
			 List<SalStaffSalReportDetailModel> salStaffSalReportDetailModels = null;
			  SalUpdateMutiStaffModel salUpdateMutiStaffModel = this.fromInputJson(request, SalUpdateMutiStaffModel.class);
			 if(salUpdateMutiStaffModel.getOptType() == OptPersonType.FLOAT.getCode()){
				 List<SalStaffBaseInfoModel> staffList = salUpdateMutiStaffModel.getStaffBaseInfoModels();
				 String reportId = salUpdateMutiStaffModel.getReportId();
				 salStaffSalReportDetailModels= salReportService.getSelectStaffFloatSalData(staffList, corpId, reportId);
				 Double otherAftertaxDeduct =null;
				 Double annualBonus=null;
				 Double monthBonus=null;
				 Double otherAftertaxSal=null;
				 Double otherPretaxSal=null;
				 Double otherPretaxDeduct=null;
				 for(SalStaffSalReportDetailModel salStaffSalReportDetailModel:salStaffSalReportDetailModels){
					 otherAftertaxDeduct=salStaffSalReportDetailModel.getOtherAftertaxDeduct();
					 if(otherAftertaxDeduct!=null){
					     salStaffSalReportDetailModel.setOtherAftertaxDeduct(otherAftertaxDeduct/100);
					 }
					 annualBonus = salStaffSalReportDetailModel.getAnnualBonus();
					 if(annualBonus!=null){
					     salStaffSalReportDetailModel.setAnnualBonus(annualBonus/100);
					 }
					 monthBonus=salStaffSalReportDetailModel.getMonthBonus();
					 if(monthBonus!=null){
					     salStaffSalReportDetailModel.setMonthBonus(monthBonus/100);
					 }
					 otherAftertaxSal = salStaffSalReportDetailModel.getOtherAftertaxSal();
					 if(annualBonus!=null){
					     salStaffSalReportDetailModel.setOtherAftertaxSal(otherAftertaxSal/100);
					 }
					 otherPretaxSal=salStaffSalReportDetailModel.getOtherPretaxSal();
					 if(otherAftertaxDeduct!=null){
					     salStaffSalReportDetailModel.setOtherPretaxSal(otherPretaxSal/100);
					 }
					 otherPretaxDeduct = salStaffSalReportDetailModel.getOtherPretaxDeduct();
					 if(annualBonus!=null){
					     salStaffSalReportDetailModel.setOtherPretaxDeduct(otherPretaxDeduct/100);
					 }
				 }
			 }else if(salUpdateMutiStaffModel.getOptType() == OptPersonType.RESET.getCode()){
				   
			 }		
			this.writeSuccessJsonToClient(response, salStaffSalReportDetailModels);
		} catch (Exception e) {
			e.printStackTrace();
			this.writeFailJsonToClient(response);
		}
	}
	
	/**
	 * 同步企业到我们的叮当薪资
	 * 
	 * @param request
	 * @param response
	 */
	@RequestMapping(value = "/synchronizedCorpToDingSal**",method = RequestMethod.POST)
	public void synchronizedCorpToDingSal(HttpServletRequest request, HttpServletResponse response){
		SalUpdateMutiStaffModel salUpdateMutiStaffModel = this.fromInputJson(request, SalUpdateMutiStaffModel.class);
		List<String> corpList = salUpdateMutiStaffModel.getCorpList();
		try{
			salSynService.synchCopInfo(corpList);
		    this.writeSuccessJsonToClient(response, Boolean.TRUE);
		}catch(Exception e){
			e.printStackTrace();
		}
	}

}
