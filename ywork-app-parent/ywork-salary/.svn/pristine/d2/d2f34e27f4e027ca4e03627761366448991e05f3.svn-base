			

           package me.ywork.salary.controller;
			
			import java.util.List;
			import javax.servlet.http.HttpServletRequest;
			import javax.servlet.http.HttpServletResponse;
			import org.springframework.beans.factory.annotation.Autowired;
			import org.springframework.stereotype.Controller;
			import org.springframework.web.bind.annotation.RequestMapping;
			import org.springframework.web.bind.annotation.RequestMethod;
			import org.springframework.web.bind.annotation.RequestParam;			
			import me.ywork.controller.RestController;
import me.ywork.page.PageData;
import me.ywork.page.Pageable;
			import me.ywork.page.PageableDefaults;
import me.ywork.salary.model.MutiStaffInfoModel;
import me.ywork.salary.model.StaffSalInfoDetailModel;
import me.ywork.salary.model.StaffSalInfoModel;
import me.ywork.salary.model.UpdateMutiStaffAttendanceModel;
import me.ywork.salary.service.StaffSalInfoService;
			
			
			/**
			 *     
			 *     员工薪资信息模块的控制器
			 *
			 **/
			@Controller
			@RequestMapping(value = {  "**/app/calsalary/salInfo" })
			public class StaffSalInfoController  extends RestController<StaffSalInfoService> {
				
				@Autowired
				private StaffSalInfoService staffSalInfoService;
				
			    /**
			     *   获取员工薪详情:获取所有员工的薪资规则，要分页
			     *   
				 * @param request
				 * @param response
				 * @param corpId 钉钉企业号
				 * @param pageable 分页的Pageable
				 */
				 @RequestMapping(value="/getStaffSalaryInfos**",method=RequestMethod.GET)
			   public void  getStaffSalaryInfos(HttpServletRequest request,HttpServletResponse response,
																	   @RequestParam(value="corpId") String corpId ,
																	   @PageableDefaults Pageable pageable){
					 try{
						 PageData<StaffSalInfoModel> staffSalInfoModels =  staffSalInfoService.getStaffSalaryInfos(corpId, pageable);
						 this.writeSuccessJsonToClient(response, staffSalInfoModels);
					 }catch(Exception e){
						 this.writeFailJsonToClient(response);
					 }
				 }

			     /**
			       *   获取员工规则详情:通过员工ID来获取该员工的薪资规则
			      *   
				  * @param request
				  * @param response
				  * @param staffId 员工ID
				  */
				 @RequestMapping(value="/getSalaryInfosByStaffId**",method=RequestMethod.GET)
				 public void  getSalaryInfosByStaffId(HttpServletRequest request,HttpServletResponse response,
																				 @RequestParam(value="staffId") String staffId){
					 try{
						 StaffSalInfoDetailModel  staffSalInfoDetailModel = staffSalInfoService.getSalaryInfosByStaffId(staffId);
						 this.writeSuccessJsonToClient(response, staffSalInfoDetailModel);
					 }catch(Exception e){
						 this.writeFailJsonToClient(response);
					 }
				 }

			    /**
			     *   获取选中人员工资规则详情(编辑规则):通过编辑可以获取多个人的薪资规则
				  * 
				  * @param request
				  * @param response
				  */
				 @RequestMapping(value="/getMutiStaffSalaryInfosDetail**",method=RequestMethod.GET)
				 public void  getMutiStaffSalaryInfosDetail(HttpServletRequest request,HttpServletResponse response){
					 MutiStaffInfoModel mutiStaffInfoModel = this.fromInputJson(request , MutiStaffInfoModel.class );
					 try{
					         List<StaffSalInfoDetailModel> staffSalInfoDetailModels =staffSalInfoService.getMutiStaffSalaryInfosDetail(
							 mutiStaffInfoModel.getCorpId(), mutiStaffInfoModel.getStaffIds());
					         this.writeSuccessJsonToClient(response, staffSalInfoDetailModels);
					 }catch(Exception e){
						 this.writeFailJsonToClient(response);
					 }
				 }

			    /**
			     *   提交编辑数据:批量修改多个人的薪资
			     *   
				  * @param request
				  * @param response
				  */
				 @RequestMapping(value="/updateMutiStaffInfos**",method=RequestMethod.POST)
				 public void updateMutiStaffInfos(HttpServletRequest request,HttpServletResponse response){
						 UpdateMutiStaffAttendanceModel updateMutiStaffAttendanceModel =this.fromInputJson(request , UpdateMutiStaffAttendanceModel.class);
						 try{
							 List<StaffSalInfoDetailModel> salInfos = updateMutiStaffAttendanceModel.getStaffSalInfoDetailModels();
							 Boolean updateRs = staffSalInfoService.updateMutiStaffInfos(salInfos);
							 this.writeSuccessJsonToClient(response, updateRs);
						 }catch(Exception e){
							 this.writeFailJsonToClient(response);
						 }
				 }

			    /**
			     *   下载薪资模板
				  * 
				  * @param request
				  * @param response
				  */
				 @RequestMapping(value="/downloadSalaryTemplet**",method=RequestMethod.GET)
				 public void downloadSalaryTemplet(HttpServletRequest request,HttpServletResponse response){
					 try{
					      staffSalInfoService.downloadSalaryTemplet();
					 }catch(Exception e){
						 this.writeFailJsonToClient(response);
					 }
				 }

			    /**
			     *   上传薪资模板
				  * 
				  * @param request
				  * @param response
				  * @param fileKey 
				  */
				 @RequestMapping(value="/uploadSalaryTemplet**",method=RequestMethod.POST)
				 public void uploadSalaryTemplet(HttpServletRequest request,HttpServletResponse response,
																			 @RequestParam(value="fileKey") String fileKey){
					
					 try{
						 staffSalInfoService.uploadSalaryTemplet(fileKey);
					 }catch(Exception e){
						 this.writeFailJsonToClient(response);
					 }
				 }
			
				@Override
				protected String getHomePageUrl(String param) {
					// TODO Auto-generated method stub
					return null;
				}
			
				@Override
				protected StaffSalInfoService getService() {
					// TODO Auto-generated method stub
					return null;
				}
			
			}
