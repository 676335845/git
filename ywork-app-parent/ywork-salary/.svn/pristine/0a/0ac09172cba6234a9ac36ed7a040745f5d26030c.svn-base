package me.ywork.salary.service;

import me.ywork.base.service.BizService;
import me.ywork.context.CallContext;
import me.ywork.page.PageData;
import me.ywork.page.Pageable;
import me.ywork.salary.model.SalStaffBaseInfoModel;
import me.ywork.salary.model.SalAttenExcelModel;
import me.ywork.salary.model.SalInfoDetailModel;
import me.ywork.salary.model.SalInfoExcelModel;

import java.util.List;

/**
 * 只有在薪资数据获得的情况下，才能进行薪资计算等操作，所以这是第一步 这里包括通过excel表导入薪资数据、管理每一个员工的薪资规则
 *
 * Created by xiaobai on 2017/1/10.
 */
public interface SalInfoService extends BizService {

	/**
	 * 获取员工薪详情:获取所有员工的薪资详情，要分页
	 * 
	 * @param corpId   钉钉企业号
	 * @param pageable 分页的Pageable
	 * @return 分页的数据
	 */
	PageData<SalStaffBaseInfoModel> getStaffSalInfos(String corpId, Pageable pageable);

	/**
	 * 获取员工薪资详情:通过员工ID来获取该员工的薪资详情
	 * 
	 * @param staffId 员工标识
	 * @return 员工薪资信息的详情
	 */
	SalInfoDetailModel getSalInfosByStaffId(String corpId , String dingStaffId);

	/**
	 * 获取选中人员工资详情详情(编辑规则):通过编辑可以获取多个人的薪资详情
	 * 
	 * @param corpId 钉钉企业号
	 * @param staffids 员工ID的集合
	 * @return 员工薪资详细的集合
	 */
	List<SalInfoDetailModel> getMutiStaffSalInfosDetail(String corpId, List<String> staffids);

	/**
	 * 提交编辑数据:批量修改多个人的薪资
	 * 
	 * @param staffSalInfos    员工薪资信息的集合
	 * @return 更新的结果
	 */
	Boolean updateMutiStaffInfos(List<SalInfoDetailModel> staffSalInfos);
	
	/**
	 * 计算未设置薪资详情的人数
	 * 
	 * @param corpId 钉钉标识
	 * @return  未设置薪资的人数
	 */
	Integer calcuUnSetSalStaffNum(String corpId);

	/**
	 * 下载薪资模板
	 * 
	 * @return
	 */
	Object downloadSalTemplet();

	/**
	 * 上传薪资模板 线上文件key：654465465465
	 * 
	 * @param fileKey
	 * @return
	 */
	Object uploadSalTemplet(String fileKey);
	
	/**
	 * 解析薪资模板的信息
	 */
	SalInfoExcelModel parseSalInfoExcel(CallContext callContext , String fileId);
	/**
	 * 提交薪资模板的信息
	 */
	Boolean commitSalInfoExcel(CallContext callContext , String cacheKey);	
}
