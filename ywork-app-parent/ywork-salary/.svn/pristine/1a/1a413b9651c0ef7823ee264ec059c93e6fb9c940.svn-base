package me.ywork.salary.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.alibaba.fastjson.JSONObject;

import me.ywork.context.CallContext;
import me.ywork.controller.RestController;
import me.ywork.salary.model.SalCorpWhpRuleModel;
import me.ywork.salary.model.SalMutiStaffInfoModel;
import me.ywork.salary.model.SalCorpBaseSalRuleModel;
import me.ywork.salary.model.SalSysRuleModel;
import me.ywork.salary.model.SalStaffBaseInfoModel;
import me.ywork.salary.model.SalUpdateMutiStaffModel;
import me.ywork.salary.model.SalUpdateStaffesModel;
import me.ywork.salary.service.SalRuleService;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * 薪资规则的控制器
 * 
 */

@Controller
@RequestMapping("**/app/calsalary/salrule")
public class SalRuleController extends RestController<SalRuleService> {
	@Autowired
	private SalRuleService salRuleService;;

	/**
	 * 得到企业所有的薪资规则
	 * 
	 * @param request
	 * @param response
	 * @param corpId
	 *            钉钉企业号
	 */
	@RequestMapping(value = "/getAllSalRules**", method = RequestMethod.GET)
	public void getAllSalRules(HttpServletRequest request, HttpServletResponse response) {
		CallContext callContext = this.getCallContext(request);
		String corpId = callContext.getCorpId();
		try {
			List<SalSysRuleModel> salRuleModels = salRuleService.getAllSalRules(corpId);
			this.writeSuccessJsonToClient(response, salRuleModels);
		} catch (Exception e) {
			e.printStackTrace();
			this.writeFailJsonToClient(response);
		}
	}

	/**
	 * 根据薪资规则主键得到企业的薪资规则明细
	 * 
	 * @param request
	 * @param response
	 * @param ruleId
	 *     企业薪资规则表的主键
	 */
	@RequestMapping(value = "/getSalRuleByRuleId**", method = RequestMethod.GET)
	public void getSalRuleByRuleId(HttpServletRequest request, HttpServletResponse response,
															@RequestParam(value = "ruleId") String ruleId) {
		CallContext callContext = this.getCallContext(request);
		String corpId = callContext.getCorpId();
		try {
			SalCorpBaseSalRuleModel salRuleDetailModel = salRuleService.getSalRuleByRuleId(corpId , ruleId);
			this.writeSuccessJsonToClient(response, salRuleDetailModel);
		} catch (Exception e) {
			this.writeFailJsonToClient(response);
			e.printStackTrace();
		}
	}
	
	/**
	 * 根据企业标识和的薪资规则的类型来获得相应的人员信息
	 * 
	 * @param request
	 * @param response
	 * @param ruleId 企业薪资规则表的主键
	 */
	@RequestMapping(value = "/getStafiesByCRI**", method = RequestMethod.GET)
	public void getStafiesByCRI(HttpServletRequest request, HttpServletResponse response,
			                                                      @RequestParam(value="ruleId")String ruleId){
		try{
			CallContext callContext = this.getCallContext(request);
			String corpId = callContext.getCorpId();
			Short type =0;
//			List<SalStaffBaseInfoModel> staffBaseInfoModels = salRuleService.getStafiesByCRI(ruleId);
			List<SalStaffBaseInfoModel> staffBaseInfoModels =salRuleService.getStaffAddress(corpId,ruleId,type);
			this.writeSuccessJsonToClient(response, staffBaseInfoModels);
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	
	/**
	 * 根据企业标识和的薪资规则的类型来获得相应的人员信息
	 * 
	 * @param request
	 * @param response
	 * @param ruleId 企业薪资规则表的主键
	 */
	@RequestMapping(value = "/getStafiesByWhpRule**", method = RequestMethod.GET)
	public void getStafiesByWhpRule(HttpServletRequest request, HttpServletResponse response,
																			@RequestParam(value ="ruleType") Short whpRuleType){
		CallContext callContext = this.getCallContext(request);
		String corpId = callContext.getCorpId();
		try{
			List<SalStaffBaseInfoModel> staffBaseInfoModels = salRuleService.getStaffAddress(corpId , null ,whpRuleType);
			this.writeSuccessJsonToClient(response, staffBaseInfoModels);
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	
	/**
	 *   更新企业薪资规则下的人员
	 */
	@RequestMapping(value = "/updateSalRuleStafies**", method = RequestMethod.POST)
	public void updateSalRuleStafies(HttpServletRequest request, HttpServletResponse response){
		CallContext callContext=this.getCallContext(request);
		String corpId = callContext.getCorpId();
		try{
			  SalUpdateStaffesModel  models= this.fromInputJson(request , SalUpdateStaffesModel.class);
				Boolean rs = salRuleService.updateSalRuleStaffies(models,corpId);
				this.writeSuccessJsonToClient(response, rs);
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	
	/**
	 *   删除企业员工的薪资规则
	 */
	@RequestMapping(value ="/deleteStaffSalRule**",method=RequestMethod.POST)
	public void deleteStaffBaseSalRule(HttpServletRequest request, HttpServletResponse response){
		try{
			SalStaffBaseInfoModel salStaffBaseInfoModel = this.fromInputJson(request , SalStaffBaseInfoModel.class);
			Boolean rs = salRuleService.deleteStaffSalRule(salStaffBaseInfoModel);
			this.writeSuccessJsonToClient(response, rs);
		}catch(Exception e){
			e.printStackTrace();
		}
	}	

	/**
	 * 更新企业的薪资规则
	 * 
	 * @param request
	 * @param response
	 */
	@RequestMapping(value = "/updateBaseSalRule**", method = RequestMethod.POST)
	public void updateSalRule(HttpServletRequest request, HttpServletResponse response) {
		System.out.println("进入后台！");
		try {
			 SalCorpBaseSalRuleModel salRuleDetailModel=this.fromInputJson(request, SalCorpBaseSalRuleModel.class);
			 
			 Boolean salRuleUpdateRs = salRuleService.updateSalRule(salRuleDetailModel);
			this.writeSuccessJsonToClient(response, salRuleUpdateRs);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	/**
	 *  得到企业代缴代扣规则
	 *  
	 * @param request
	 * @param response
	 * @param corpId 企业标识
	 */
	@RequestMapping(value = "/getCwhpRuleList**",method=RequestMethod.GET)
	public void  getCwhpRuleList(HttpServletRequest request, HttpServletResponse response){
		CallContext callContext = this.getCallContext(request);
		String corpId = callContext.getCorpId();
		try{
			List<SalCorpWhpRuleModel> salCwhpRuleModels = salRuleService.getCwhpRuleList(corpId);
			this.writeSuccessJsonToClient(response, salCwhpRuleModels);
		}catch(Exception e){
			e.printStackTrace();
		}
	}	
	
	/**
	 *  更新企业代缴代扣规则
	 *  
	 * @param request
	 * @param response
	 */
	@RequestMapping(value = "/updateCwhpRuleList**" , method=RequestMethod.POST)
	public void updateCwhpRuleList(HttpServletRequest request, HttpServletResponse response){
         	try{
         		SalUpdateMutiStaffModel salUpdateMutiStaffModel = this.fromInputJson(request, SalUpdateMutiStaffModel.class);
         		List<SalCorpWhpRuleModel>  salCwhpRuleModels = salUpdateMutiStaffModel.getSalCwhpRuleModels();
         		Boolean rs =salRuleService.updateCwhpRuleList(salCwhpRuleModels);
         		this.writeSuccessJsonToClient(response, rs);
			}catch(Exception e){
				e.printStackTrace();
			}
	}
	
	@Override
	protected String getHomePageUrl(String param) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	protected SalRuleService getService() {
		// TODO Auto-generated method stub
		return null;
	}
}
