			
	
	      package me.ywork.salary.repository;
			
			import java.util.List;
			
			import org.apache.ibatis.annotations.Param;
			import org.springframework.stereotype.Repository;
			
			import me.ywork.base.repository.IRepository;
			import me.ywork.page.PageData;
			import me.ywork.page.Pageable;
			import me.ywork.salary.entity.StaffSalInfoEntity;
import me.ywork.salary.model.FieldItemModel;
import me.ywork.salary.model.StaffSalInfoDetailModel;
			import me.ywork.salary.model.StaffSalInfoModel;
			
			@Repository
			public interface StaffSalInfoRepository extends IRepository<StaffSalInfoEntity>{
				
				/**
			     *   获取员工薪详情：获取所有员工的薪资详情，要分页
				 * 
				 * @param corpId  钉钉企业号
				 * @param pageable 分页的Pageable
				 * @return 分页的数据
				 */
			    List<StaffSalInfoModel> getStaffSalaryInfos(@Param("corpId")String corpId ,@Param("beginNum") Integer  beginNum , @Param("endNum") Integer endNum );
			
			    /**
			     *   获取员工规则详情：通过员工薪资ID来获取该员工的薪资详情
			     * 
			     * @param staffSalId 员工薪资标识
			     * @return  员工薪资信息的详情
			     */
			    StaffSalInfoDetailModel getSalInfosByStaffSalId(@Param("staffSalId") String staffSalId);
			
			    /**
			     *   获取选中人员工资详情详情：通过编辑可以获取多个人的薪资详情
			     * 
			     * @param corpId  钉钉企业号
			     * @param staffids 员工ID的集合
			     * @return 员工薪资详细的集合
			     */
			    List<StaffSalInfoDetailModel> getMutiStaffSalaryInfosDetail(@Param("corpId")String corpId ,@Param("staffIds") List<String> staffids);
			
			    /**
			     *   修改多个人的薪资
			     * 
			     * @param staffSalInfo 员工薪资信息
			     * @return 更新的结果
			     */
			    Integer updateStaffInfo(@Param("staffSalInfo") StaffSalInfoDetailModel staffSalInfo);
			
			    /**
			     *   下载薪资模板
			     * 
			     * @return
			     */
			    Object downloadSalaryTemplet();

			    /**
			     *   上传薪资模板
			     *   线上文件key：654465465465
			     * 
			     * @param fileKey
			     * @return
			     */
			    Object uploadSalaryTemplet(@Param("fileKey") String fileKey);
			    
			    /**
			     *   新增字段
			     *   @param  fieldItemModel
			     *   @return 
			     */
			    Integer addNewField( FieldItemModel fieldItemModel);
			    
			    /**
			     * 根据字段标识去查找字段信息
			     */
			    FieldItemModel getItemModel(@Param("itemId") String itemId);
			    
			    /**
			     *   更新字段
			     *   @param fieldItemModel
			     *   @return
			     */
			    Integer updateField(FieldItemModel fieldItemModel); 
			    
			    /**
			     *  根据父字段ID去查询该员工所有自定义的字段
			     */
			    List<FieldItemModel> getStaffFieldItems(@Param("staffSalId") String staffSalId); 
			}
