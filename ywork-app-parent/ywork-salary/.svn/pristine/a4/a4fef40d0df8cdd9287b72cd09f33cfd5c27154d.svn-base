package me.ywork.salary.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.alibaba.dubbo.common.logger.Logger;
import com.alibaba.dubbo.common.logger.LoggerFactory;

import me.ywork.context.CallContext;
import me.ywork.controller.RestController;
import me.ywork.salary.enumeration.OptPersonType;
import me.ywork.salary.model.SalMutiStaffInfoModel;
import me.ywork.salary.model.SalStaffBaseInfoModel;
import me.ywork.salary.model.SalStaffSalReportDetailModel;
import me.ywork.salary.model.SalUpdateMutiStaffModel;
import me.ywork.salary.service.SalInfoService;
import me.ywork.salary.service.SalPassService;
import me.ywork.salary.service.SalReportService;

/**
 * PC端界面，一些公共的接口
 * 
 */
@Controller
@RequestMapping(value = { "**/app/calsalary/pc" })
public class SalPcController extends RestController<SalInfoService> {

	@Autowired 
	private SalPassService salPassService;
	@Autowired
	private SalReportService salReportService;
	private static final Logger logger = LoggerFactory.getLogger(SalAttendanceController.class);
	
	@Override
	protected String getHomePageUrl(String param) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	protected SalInfoService getService() {
		// TODO Auto-generated method stub
		return null;
	}
	

	/**
	 * 获取选中人员该月工资详情(修改浮动款项):传递工资表ID和多个员工ID去返回多个员工的工资数据
	 * 
	 * @param request
	 * @param response
	 */
	@RequestMapping(value = "/getSelectedStaff**", method = RequestMethod.POST)
	public void getSelectedStaffSalaryDetail(HttpServletRequest request, HttpServletResponse response) {
		SalMutiStaffInfoModel mutiStaffInfoModel = this.fromInputJson(request, SalMutiStaffInfoModel.class);
		CallContext callContext = this.getCallContext(request);
		String corpId = callContext.getCorpId();
		try {
			 List<SalStaffSalReportDetailModel> salStaffSalReportDetailModels = null;
			  SalUpdateMutiStaffModel salUpdateMutiStaffModel = this.fromInputJson(request, SalUpdateMutiStaffModel.class);
			 if(salUpdateMutiStaffModel.getOptType() == OptPersonType.FLOAT.getCode()){
//					List<SalStaffSalReportDetailModel> monthStaffSalModels = salReportService.getSelectedStaffSalDetail(
//							mutiStaffInfoModel.getStaffIds(), mutiStaffInfoModel.getSalReportId());
				 List<SalStaffBaseInfoModel> staffList = salUpdateMutiStaffModel.getStaffBaseInfoModels();
				 String reportId = salUpdateMutiStaffModel.getReportId();
				 salStaffSalReportDetailModels= salReportService.getSelectStaffFloatSalData(staffList, corpId, reportId);
			 }else if(salUpdateMutiStaffModel.getOptType() == OptPersonType.RESET.getCode()){
				   
			 }		
			this.writeSuccessJsonToClient(response, salStaffSalReportDetailModels);
		} catch (Exception e) {
			e.printStackTrace();
			this.writeFailJsonToClient(response);
		}
	}

}
