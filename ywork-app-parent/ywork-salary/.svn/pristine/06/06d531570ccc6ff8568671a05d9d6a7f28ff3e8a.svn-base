package me.ywork.salary.controller;

import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.alibaba.dubbo.common.logger.Logger;
import com.alibaba.dubbo.common.logger.LoggerFactory;

import me.ywork.controller.RestController;
import me.ywork.page.PageData;
import me.ywork.page.PageRequest;
import me.ywork.page.Pageable;
import me.ywork.page.PageableDefaults;
import me.ywork.salary.model.SalCorpAttenModel;
import me.ywork.salary.model.SalMutiStaffInfoModel;
import me.ywork.salary.model.SalStaffAttendanceModel;
import me.ywork.salary.model.SalUpdateMutiStaffModel;
import me.ywork.salary.service.SalAttendanceService;
import me.ywork.salary.service.impl.SalAttendanceServiceImpl;

/**
  * 考勤模块的控制器
 *
 **/
@Controller
@RequestMapping(value = { "**/app/calsalary/attendance" })
public class SalAttendanceController extends RestController<SalAttendanceService> {
	@Autowired
	private SalAttendanceService attendanceService;
	private static final Logger logger = LoggerFactory.getLogger(SalAttendanceController.class);
	/**
	 * 得到企业的月度考勤表的分页数据
	 * 
	 * @param request
	 * @param response
	 * @param corpId  悦工作钉钉ID
	 * @param pageable  分页的pageable
	 */
	@RequestMapping(value = "/getAllMonthesAttendanceData**", method = RequestMethod.GET)
	public void getAllMonthesAttendanceData(HttpServletRequest request, HttpServletResponse response,
																					@RequestParam(value = "corpId") String corpId) {

		try {
			List<SalCorpAttenModel> attendanceDatas = attendanceService.getAllMonthesAttendanceData(corpId);
			this.writeSuccessJsonToClient(response, attendanceDatas);
		} catch (Exception e) {
			this.writeFailJsonToClient(response);
			e.printStackTrace();
		}
	}

	/**
	 * 根据考勤表ID来得到月度考勤表的数据
	 * 
	 * @param request
	 * @param response
	 * @param monthId
	 *            考勤表ID
	 * @param pageable
	 *            分页Pageable
	 */
	@RequestMapping(value = "/getAllStaffAttendanceByReportId**", method = RequestMethod.GET)
	public void getAllStaffAttendanceByMonthId(HttpServletRequest request, HttpServletResponse response,
				                                                                       @RequestParam(value = "reportId") String reportId,
				                                                                       @RequestParam(value = "pageNo") Integer pageNo,
																						@RequestParam(value = "pageSize") Integer pageSize,
																						@RequestParam(value ="totalCount") Integer totalCount) {
		PageRequest pageable = new PageRequest(pageNo , pageSize , totalCount);
		try {
			PageData<SalStaffAttendanceModel> attendanceDatas = attendanceService.getAllStaffAttendanceByReportId(reportId,
					pageable);
			this.writeSuccessJsonToClient(response, attendanceDatas);
		} catch (Exception e) {
			this.writeFailJsonToClient(response);
			e.printStackTrace();
		}
	}

	/**
	 * 选择多个员工和该月考勤的ID来得到这些员工的考勤详情
	 * 
	 * @param request
	 * @param response
	 */
	@RequestMapping(value = "/getMutiStaffAttendanceDetail**", method = RequestMethod.POST)
	public void getMutiStaffAttendanceDetail(HttpServletRequest request, HttpServletResponse response) {
		SalMutiStaffInfoModel mutiStaffInfoModel = this.fromInputJson(request, SalMutiStaffInfoModel.class);
		try {
			List<SalStaffAttendanceModel> attendanceDatas = attendanceService.getMutiStaffAttendanceDetail(
					mutiStaffInfoModel.getStaffIds(), mutiStaffInfoModel.getAttendanceReportId());
			this.writeSuccessJsonToClient(response, attendanceDatas);
		} catch (Exception e) {
			this.writeFailJsonToClient(response);
			e.printStackTrace();
		}
	}

	/**
	 * 修改某员工的考勤数据后可以保存到数据库
	 * 
	 * @param request
	 * @param response
	 */
	@RequestMapping(value = "/updateMutiStaffAttendance**", method = RequestMethod.POST)
	public void updateMutiStaffAttendance(HttpServletRequest request, HttpServletResponse response) {
		SalUpdateMutiStaffModel updateMutiStaffAttendanceModel = this.fromInputJson(request,
				SalUpdateMutiStaffModel.class);
		try {
			Boolean updateRs = null;
			if (updateMutiStaffAttendanceModel != null) {
				updateRs = attendanceService.updateMutiStaffAttendance(updateMutiStaffAttendanceModel.getStaffAttendances());
			}
			this.writeSuccessJsonToClient(response, updateRs);
		} catch (Exception e) {
			this.writeFailJsonToClient(response);
			e.printStackTrace();
		}
	}

	@Override
	protected String getHomePageUrl(String param) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	protected SalAttendanceService getService() {
		// TODO Auto-generated method stub
		return null;
	}
}
