			

           package me.ywork.salary.service.impl;
			
			import me.ywork.context.CallContext;
			import me.ywork.salary.model.StaffBaseInfoModel;
			import me.ywork.salary.repository.SalPassRepository;
			import me.ywork.salary.service.SalPassService;
			
			import java.util.List;
			
			import org.apache.commons.lang.StringUtils;
			import org.springframework.beans.factory.annotation.Autowired;
			import org.springframework.stereotype.Service;
			
			/**
			 * Created by xiaobai on 2017/1/11.
			 */
			@Service
			public class SalPassServiceImpl implements SalPassService{
				@Autowired
				private SalPassRepository salPassRepository;
			    @Override
			    public Short getCorpPasswordOpenStatus(String corpId) {
				        if(StringUtils.isBlank(corpId)){
				            throw new IllegalArgumentException("getCorpPasswordOpenStatus param corpId is null or empty");
				        }
				        Short corpPassOpenStatus = salPassRepository.getCorpPasswordOpenStatus(corpId);
				        return corpPassOpenStatus;
			    }
			
			    @Override
			    public List<StaffBaseInfoModel> getStaffInfoByKeyword(String corpId ,String keyword) {
				        if(StringUtils.isBlank(corpId)){
				            throw new IllegalArgumentException("getStaffInfoByKeyword param corpId is null or empty.");
				        }
				        if(StringUtils.isBlank(keyword)){
				            throw new IllegalArgumentException("getStaffInfoByKeyword param keyword is null or empty.");
				        }
				        List<StaffBaseInfoModel> staffBaseInfoModels = salPassRepository.getStaffInfoByKeyword(corpId,keyword);
				        return staffBaseInfoModels;
			    }
			
			    @Override
			    public Boolean resetStaffPassword(String corpId , String staffId) {
				        if(StringUtils.isBlank(staffId)){
				            throw new IllegalArgumentException("resetStaffPassword param staffId is null or empty.");
				        }
				        
				        Integer resetRs = salPassRepository.resetStaffPassword(corpId  , staffId);
				        return resetRs == null ?Boolean.FALSE :resetRs>0;
			    }
			
				@Override
				public boolean deleteById(CallContext callContext, String id) {
					// TODO Auto-generated method stub
					return false;
				}
			}
